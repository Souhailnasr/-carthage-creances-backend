# Script de test pour v√©rifier la cr√©ation de dossier et date_cloture
Write-Host "üß™ TEST DE CR√âATION DE DOSSIER - V√âRIFICATION date_cloture" -ForegroundColor Blue
Write-Host "=============================================================" -ForegroundColor Yellow

# Configuration
$baseUrl = "http://localhost:8089/carthage-creance"
$testEmail = "souhailnasr80@gmail.com"

# Attendre que l'application d√©marre
Write-Host "`n‚è≥ Attente du d√©marrage de l'application (10 secondes)..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

Write-Host "`nüîç Test 1: R√©cup√©ration de l'utilisateur par email" -ForegroundColor Blue
try {
    $url = "$baseUrl/api/utilisateurs/by-email/$testEmail"
    Write-Host "URL: $url" -ForegroundColor Gray
    
    $response = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 10 -ErrorAction Stop
    
    if ($response.StatusCode -eq 200) {
        $user = $response.Content | ConvertFrom-Json
        Write-Host "‚úÖ Utilisateur trouv√©: ID=$($user.id), Nom=$($user.nom), Role=$($user.roleUtilisateur)" -ForegroundColor Green
        
        Write-Host "`nüîç Test 2: Cr√©ation d'un dossier de test" -ForegroundColor Blue
        
        # Donn√©es de test pour la cr√©ation de dossier
        $dossierData = @{
            titre = "Test Dossier - V√©rification date_cloture"
            description = "Dossier de test pour v√©rifier que date_cloture est NULL"
            numeroDossier = "TEST-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
            montantCreance = 1000.50
            nomCreancier = "Test Cr√©ancier"
            nomDebiteur = "Test D√©biteur"
            agentCreateurId = $user.id
            urgence = "NORMALE"
            statut = "EN_ATTENTE_VALIDATION"
            typeDocumentJustificatif = "CONTRAT"
        } | ConvertTo-Json -Depth 3
        
        Write-Host "Donn√©es du dossier:" -ForegroundColor Cyan
        Write-Host $dossierData -ForegroundColor White
        
        $headers = @{
            "Content-Type" = "application/json"
        }
        
        $createUrl = "$baseUrl/api/dossiers"
        Write-Host "URL de cr√©ation: $createUrl" -ForegroundColor Gray
        
        $createResponse = Invoke-WebRequest -Uri $createUrl -Method POST -Body $dossierData -Headers $headers -UseBasicParsing -TimeoutSec 15 -ErrorAction Stop
        
        if ($createResponse.StatusCode -eq 200 -or $createResponse.StatusCode -eq 201) {
            Write-Host "‚úÖ Dossier cr√©√© avec succ√®s!" -ForegroundColor Green
            Write-Host "Status Code: $($createResponse.StatusCode)" -ForegroundColor Green
            
            $createdDossier = $createResponse.Content | ConvertFrom-Json
            Write-Host "`nüìÑ D√©tails du dossier cr√©√©:" -ForegroundColor Cyan
            Write-Host "ID: $($createdDossier.id)" -ForegroundColor White
            Write-Host "Titre: $($createdDossier.titre)" -ForegroundColor White
            Write-Host "Num√©ro: $($createdDossier.numeroDossier)" -ForegroundColor White
            Write-Host "Date cr√©ation: $($createdDossier.dateCreation)" -ForegroundColor White
            Write-Host "Date cl√¥ture: $($createdDossier.dateCloture)" -ForegroundColor White
            Write-Host "Statut: $($createdDossier.statut)" -ForegroundColor White
            Write-Host "Dossier Status: $($createdDossier.dossierStatus)" -ForegroundColor White
            
            # V√©rification critique
            if ($createdDossier.dateCloture -eq $null -or $createdDossier.dateCloture -eq "") {
                Write-Host "`n‚úÖ SUCC√àS! date_cloture est NULL comme attendu" -ForegroundColor Green
            } else {
                Write-Host "`n‚ùå PROBL√àME! date_cloture n'est pas NULL: $($createdDossier.dateCloture)" -ForegroundColor Red
            }
            
        } else {
            Write-Host "‚ö†Ô∏è Status inattendu: $($createResponse.StatusCode)" -ForegroundColor Yellow
            Write-Host "R√©ponse: $($createResponse.Content)" -ForegroundColor Gray
        }
        
    } else {
        Write-Host "‚ùå Impossible de r√©cup√©rer l'utilisateur" -ForegroundColor Red
    }
    
} catch {
    Write-Host "‚ùå Erreur lors du test: $($_.Exception.Message)" -ForegroundColor Red
    if ($_.Exception.Response) {
        Write-Host "Status Code: $($_.Exception.Response.StatusCode)" -ForegroundColor Red
        Write-Host "Response: $($_.Exception.Response.Content)" -ForegroundColor Red
    }
}

Write-Host "`nüîç Test 3: V√©rification des dossiers existants" -ForegroundColor Blue
try {
    $url = "$baseUrl/api/dossiers"
    Write-Host "URL: $url" -ForegroundColor Gray
    
    $response = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 10 -ErrorAction Stop
    
    if ($response.StatusCode -eq 200) {
        $dossiers = $response.Content | ConvertFrom-Json
        Write-Host "‚úÖ Dossiers r√©cup√©r√©s: $($dossiers.totalElements) trouv√©s" -ForegroundColor Green
        
        if ($dossiers.content.Count -gt 0) {
            Write-Host "`nüìÑ Premier dossier:" -ForegroundColor Cyan
            $premierDossier = $dossiers.content[0]
            Write-Host "ID: $($premierDossier.id)" -ForegroundColor White
            Write-Host "Titre: $($premierDossier.titre)" -ForegroundColor White
            Write-Host "Date cr√©ation: $($premierDossier.dateCreation)" -ForegroundColor White
            Write-Host "Date cl√¥ture: $($premierDossier.dateCloture)" -ForegroundColor White
            Write-Host "Statut: $($premierDossier.statut)" -ForegroundColor White
            Write-Host "Dossier Status: $($premierDossier.dossierStatus)" -ForegroundColor White
            
            # V√©rification critique
            if ($premierDossier.dateCloture -eq $null -or $premierDossier.dateCloture -eq "") {
                Write-Host "‚úÖ date_cloture est NULL comme attendu" -ForegroundColor Green
            } else {
                Write-Host "‚ùå date_cloture n'est pas NULL: $($premierDossier.dateCloture)" -ForegroundColor Red
            }
        }
        
    } else {
        Write-Host "‚ö†Ô∏è Status: $($response.StatusCode)" -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "‚ùå Erreur lors de la r√©cup√©ration des dossiers: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nR√âSUM√â DU TEST:" -ForegroundColor Cyan
Write-Host "1. V√©rification de l'utilisateur" -ForegroundColor White
Write-Host "2. Test de cr√©ation de dossier" -ForegroundColor White
Write-Host "3. V√©rification de date_cloture" -ForegroundColor White
Write-Host "4. V√©rification des dossiers existants" -ForegroundColor White

Write-Host "`nR√âSULTAT ATTENDU:" -ForegroundColor Green
Write-Host "‚Ä¢ date_cloture doit √™tre NULL lors de la cr√©ation" -ForegroundColor White
Write-Host "‚Ä¢ date_cloture ne doit √™tre assign√©e que lors de la cl√¥ture explicite" -ForegroundColor White
Write-Host "‚Ä¢ dossierStatus doit √™tre ENCOURSDETRAITEMENT par d√©faut" -ForegroundColor White
